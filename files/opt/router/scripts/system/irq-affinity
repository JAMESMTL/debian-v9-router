#!/bin/bash

LAN_INTERFACE=lan0
WAN_INTERFACE=wan0
QUEUENAME=
TOTALCPU=$(grep -c processor /proc/cpuinfo)

if [ "$TOTALCPU" -lt 2 ]; then
	logger -t irq-affinity[$$] -p daemon.info only ${TOTALCPU} CPU skipping
	exit 0
fi

# set wan interface to first cpu
grep -E "${WAN_INTERFACE}" /proc/interrupts | awk '{print $1}'| awk -F':' '{print $1}' | while read INTERRUPT; do
	printf "%x\n" 1 > /proc/irq/${INTERRUPT}/smp_affinity
done

# set lan interface to last cpu
grep -E "${LAN_INTERFACE}" /proc/interrupts | awk '{print $1}'| awk -F':' '{print $1}' | while read INTERRUPT; do
	printf "%x\n" $(( 2 ** ($TOTALCPU - 1) )) > /proc/irq/${INTERRUPT}/smp_affinity
done

# Check if queue name is set or exit
[ -z "$QUEUENAME"] && exit 0

# set each wan queue to a cpu
cat /proc/cpuinfo | grep processor | awk '{ print $3 }' | while read CPU; do
	grep -E "${WAN_INTERFACE}-${QUEUENAME}-${CPU}" /proc/interrupts | awk '{print $1}'| awk -F':' '{print $1}' | while read INTERRUPT; do
		printf "%x\n" $(( 2 ** $CPU )) > /proc/irq/${INTERRUPT}/smp_affinity
	done
done

# set each lan queue to a cpu reversed
cat /proc/cpuinfo | grep processor | awk '{ print $3 }' | while read CPU; do
	grep -E "${LAN_INTERFACE}-${QUEUENAME}-${CPU}" /proc/interrupts | awk '{print $1}'| awk -F':' '{print $1}' | while read INTERRUPT; do
		printf "%x\n" $(( 2 ** ($TOTALCPU - 1 - $CPU) )) > /proc/irq/${INTERRUPT}/smp_affinity
	done
done

logger -t irq-affinity[$$] -p daemon.info set affinity of network adapters

exit 0
